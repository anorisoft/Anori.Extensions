<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.Issues.InspectCode</name>
    </assembly>
    <members>
        <member name="T:Cake.Issues.InspectCode.Extensions">
            <summary>
            Class containing extensions.
            </summary>
        </member>
        <member name="M:Cake.Issues.InspectCode.Extensions.ToUri(System.String)">
            <summary>
            Returns an <see cref="T:System.Uri"/> for an URL string.
            </summary>
            <param name="value">URL to convert.</param>
            <returns><see cref="T:System.Uri"/> created from <paramref name="value"/>.</returns>
        </member>
        <member name="T:Cake.Issues.InspectCode.InspectCodeIssuesAliases">
            <summary>
            Contains functionality for reading issues from JetBrains Inspect Code log files.
            </summary>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesAliases.InspectCodeIssuesProviderTypeName(Cake.Core.ICakeContext)">
            <summary>
            Gets the name of the Inspect Code issue provider.
            This name can be used to identify issues based on the <see cref="P:Cake.Issues.IIssue.ProviderType"/> property.
            </summary>
            <param name="context">The context.</param>
            <returns>Name of the Inspect Code issue provider.</returns>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesAliases.InspectCodeIssuesFromFilePath(Cake.Core.ICakeContext,Cake.Core.IO.FilePath)">
            <summary>
            Gets an instance of a provider for issues reported by JetBrains Inspect Code using a log file from disk.
            </summary>
            <param name="context">The context.</param>
            <param name="logFilePath">Path to the InspectCode log file.</param>
            <returns>Instance of a provider for issues reported by JetBrains Inspect Code.</returns>
            <example>
            <para>Read issues reported by JetBrains Inspect Code:</para>
            <code>
            <![CDATA[
                var issues =
                    ReadIssues(
                        InspectCodeIssuesFromFilePath(@"c:\build\InspectCode.log"),
                        @"c:\repo");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesAliases.InspectCodeIssuesFromContent(Cake.Core.ICakeContext,System.String)">
            <summary>
            Gets an instance of a provider for issues reported by JetBrains Inspect Code using log file content.
            </summary>
            <param name="context">The context.</param>
            <param name="logFileContent">Content of the Inspect Code log file.</param>
            <returns>Instance of a provider for issues reported by JetBrains Inspect Code.</returns>
            <example>
            <para>Read issues reported by JetBrains Inspect Code:</para>
            <code>
            <![CDATA[
                var issues =
                    ReadIssues(
                        InspectCodeIssuesFromContent(logFileContent)),
                        @"c:\repo");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesAliases.InspectCodeIssues(Cake.Core.ICakeContext,Cake.Issues.InspectCode.InspectCodeIssuesSettings)">
             <summary>
             Gets an instance of a provider for issues reported by JetBrains Inspect Code using specified settings.
             </summary>
             <param name="context">The context.</param>
             <param name="settings">Settings for reading the Inspect Code log.</param>
             <returns>Instance of a provider for issues reported by JetBrains Inspect Code.</returns>
             <example>
             <para>Read issues reported by JetBrains Inspect Code:</para>
             <code>
             <![CDATA[
                 var settings =
                     new InspectCodeIssuesSettings(
                         @"c:\build\InspectCode.log));
            
                 var issues =
                     ReadIssues(
                         InspectCodeIssues(settings),
                         @"c:\repo");
             ]]>
             </code>
             </example>
        </member>
        <member name="T:Cake.Issues.InspectCode.InspectCodeIssuesProvider">
            <summary>
            Provider for issues reported by JetBrains Inspect Code.
            </summary>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.#ctor(Cake.Core.Diagnostics.ICakeLog,Cake.Issues.InspectCode.InspectCodeIssuesSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.InspectCode.InspectCodeIssuesProvider"/> class.
            </summary>
            <param name="log">The Cake log context.</param>
            <param name="issueProviderSettings">Settings for the issue provider.</param>
        </member>
        <member name="P:Cake.Issues.InspectCode.InspectCodeIssuesProvider.ProviderName">
            <inheritdoc />
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.InternalReadIssues">
            <inheritdoc />
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.TryGetProject(System.Xml.Linq.XElement,System.String@)">
            <summary>
            Determines the project for a issue logged in a Inspect Code log.
            </summary>
            <param name="issue">Issue element from Inspect Code log.</param>
            <param name="project">Returns project.</param>
            <returns>True if the project could be parsed.</returns>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.TryGetFile(System.Xml.Linq.XElement,System.String,System.String@)">
            <summary>
            Reads the affected file path from an issue logged in a Inspect Code log.
            </summary>
            <param name="issue">Issue element from Inspect Code log.</param>
            <param name="solutionPath">Path to the solution file.</param>
            <param name="fileName">Returns the full path to the affected file.</param>
            <returns>True if the file path could be parsed.</returns>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.TryGetLine(System.Xml.Linq.XElement,System.Int32@)">
            <summary>
            Reads the affected line from an issue logged in a Inspect Code log.
            </summary>
            <param name="issue">Issue element from Inspect Code log.</param>
            <param name="line">Returns line.</param>
            <returns>True if the line could be parsed.</returns>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.TryGetRule(System.Xml.Linq.XElement,System.String@)">
            <summary>
            Reads the rule code from an issue logged in a Inspect Code log.
            </summary>
            <param name="issue">Issue element from Inspect Code log.</param>
            <param name="rule">Returns the code of the rule.</param>
            <returns>True if the rule code could be parsed.</returns>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.TryGetMessage(System.Xml.Linq.XElement,System.String@)">
            <summary>
            Reads the message from an issue logged in a Inspect Code log.
            </summary>
            <param name="issue">Issue element from Inspect Code log.</param>
            <param name="message">Returns the message of the issue.</param>
            <returns>True if the message could be parsed.</returns>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesProvider.GetPriority(System.String)">
            <summary>
            Converts the severity level to a priority.
            </summary>
            <param name="severity">Severity level as reported by InspectCode.</param>
            <returns>Priority.</returns>
        </member>
        <member name="T:Cake.Issues.InspectCode.InspectCodeIssuesProvider.IssueType">
            <summary>
            Description of an issue type.
            </summary>
        </member>
        <member name="P:Cake.Issues.InspectCode.InspectCodeIssuesProvider.IssueType.Severity">
            <summary>
            Gets or sets the severity of this issue type.
            </summary>
        </member>
        <member name="P:Cake.Issues.InspectCode.InspectCodeIssuesProvider.IssueType.WikiUrl">
            <summary>
            Gets or sets the URL to the page containing documentation about this issue type.
            </summary>
        </member>
        <member name="T:Cake.Issues.InspectCode.InspectCodeIssuesSettings">
            <summary>
            Settings for <see cref="T:Cake.Issues.InspectCode.InspectCodeIssuesAliases"/>.
            </summary>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesSettings.#ctor(Cake.Core.IO.FilePath)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.InspectCode.InspectCodeIssuesSettings"/> class.
            </summary>
            <param name="logFilePath">Path to the Inspect Code log file.</param>
        </member>
        <member name="M:Cake.Issues.InspectCode.InspectCodeIssuesSettings.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.InspectCode.InspectCodeIssuesSettings"/> class.
            </summary>
            <param name="logFileContent">Content of the Inspect Code log file.</param>
        </member>
    </members>
</doc>
