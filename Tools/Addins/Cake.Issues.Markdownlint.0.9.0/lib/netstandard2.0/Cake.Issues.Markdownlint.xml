<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.Issues.Markdownlint</name>
    </assembly>
    <members>
        <member name="T:Cake.Issues.Markdownlint.BaseMarkdownlintLogFileFormat">
            <summary>
            Base class for all log file formats supported by the Markdownlint issue provider.
            </summary>
        </member>
        <member name="M:Cake.Issues.Markdownlint.BaseMarkdownlintLogFileFormat.#ctor(Cake.Core.Diagnostics.ICakeLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Markdownlint.BaseMarkdownlintLogFileFormat"/> class.
            </summary>
            <param name="log">The Cake log instance.</param>
        </member>
        <member name="T:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintCliLogFileFormat">
            <summary>
            Logfile format as written by markdownlint-cli.
            </summary>
        </member>
        <member name="M:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintCliLogFileFormat.#ctor(Cake.Core.Diagnostics.ICakeLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintCliLogFileFormat"/> class.
            </summary>
            <param name="log">The Cake log instance.</param>
        </member>
        <member name="M:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintCliLogFileFormat.ReadIssues(Cake.Issues.Markdownlint.MarkdownlintIssuesProvider,Cake.Issues.IRepositorySettings,Cake.Issues.Markdownlint.MarkdownlintIssuesSettings)">
            <inheritdoc />
        </member>
        <member name="M:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintCliLogFileFormat.TryGetFile(System.Text.RegularExpressions.GroupCollection,Cake.Issues.IRepositorySettings,System.String@)">
            <summary>
            Reads the affected file path from a parsed entry.
            </summary>
            <param name="values">Parsed values of a line in the log file.</param>
            <param name="repositorySettings">Repository settings to use.</param>
            <param name="fileName">Returns the full path to the affected file.</param>
            <returns>True if the file path could be parsed.</returns>
        </member>
        <member name="T:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintV1LogFileFormat">
            <summary>
            Logfile format as written by Markdownlint with <c>options.resultVersion</c> set to 1.
            </summary>
        </member>
        <member name="M:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintV1LogFileFormat.#ctor(Cake.Core.Diagnostics.ICakeLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintV1LogFileFormat"/> class.
            </summary>
            <param name="log">The Cake log instance.</param>
        </member>
        <member name="M:Cake.Issues.Markdownlint.LogFileFormat.MarkdownlintV1LogFileFormat.ReadIssues(Cake.Issues.Markdownlint.MarkdownlintIssuesProvider,Cake.Issues.IRepositorySettings,Cake.Issues.Markdownlint.MarkdownlintIssuesSettings)">
            <inheritdoc />
        </member>
        <member name="T:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases">
            <summary>
            Contains functionality for reading issues from Markdownlint log files.
            </summary>
            <content>
            Contains functionality related to <see cref="T:Cake.Issues.Markdownlint.MarkdownlintIssuesProvider"/>.
            </content>
            <summary>
            Provider for issues reported my markdownlint-cli.
            </summary>
            <summary>
            Provider for issues reported my Markdownlint.
            </summary>
            <content>
            Contains functionality related to rule url resolving.
            </content>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintIssuesProviderTypeName(Cake.Core.ICakeContext)">
            <summary>
            Gets the name of the Markdownlint issue provider.
            This name can be used to identify issues based on the <see cref="P:Cake.Issues.IIssue.ProviderType"/> property.
            </summary>
            <param name="context">The context.</param>
            <returns>Name of the Markdownlint issue provider.</returns>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintIssuesFromFilePath(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,Cake.Issues.Markdownlint.BaseMarkdownlintLogFileFormat)">
            <summary>
            Gets an instance of a provider for issues reported by Markdownlint using a log file from disk.
            </summary>
            <param name="context">The context.</param>
            <param name="logFilePath">Path to the the Markdownlint log file.
            The log file needs to be in the format as defined by the <paramref name="format"/> parameter.</param>
            <param name="format">Format of the provided Markdownlint log file.</param>
            <returns>Instance of a provider for issues reported by Markdownlint.</returns>
            <example>
            <para>Read issues reported by Cake.Markdownlint:</para>
            <code>
            <![CDATA[
                var issues =
                    ReadIssues(
                        MarkdownlintIssuesFromFilePath(
                            @"c:\build\Markdownlint.log",
                            MarkdownlintCliLogFileFormat),
                        @"c:\repo");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintIssuesFromContent(Cake.Core.ICakeContext,System.String,Cake.Issues.Markdownlint.BaseMarkdownlintLogFileFormat)">
            <summary>
            Gets an instance of a provider for issues reported by Markdownlint using log file content.
            </summary>
            <param name="context">The context.</param>
            <param name="logFileContent">Content of the the Markdownlint log file.
            The log file needs to be in the format as defined by the <paramref name="format"/> parameter.</param>
            <param name="format">Format of the provided Markdownlint log file.</param>
            <returns>Instance of a provider for issues reported by Markdownlint.</returns>
            <example>
            <para>Read issues reported by Markdownlint:</para>
            <code>
            <![CDATA[
                var issues =
                    ReadIssues(
                        MarkdownlintIssuesFromContent(
                            logFileContent,
                            MarkdownlintLogFileFormat),
                        @"c:\repo");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintIssues(Cake.Core.ICakeContext,Cake.Issues.Markdownlint.MarkdownlintIssuesSettings)">
             <summary>
             Gets an instance of a provider for issues reported by Markdownlint using specified settings.
             </summary>
             <param name="context">The context.</param>
             <param name="settings">Settings for reading the Markdownlint log.</param>
             <returns>Instance of a provider for issues reported by Markdownlint.</returns>
             <example>
             <para>Read issues reported by Cake.Markdownlint:</para>
             <code>
             <![CDATA[
                 var settings =
                     new MarkdownlintIssuesSettings(
                         @"C:\build\Markdownlint.log",
                         MarkdownlintCliLogFileFormat);
            
                 var issues =
                     ReadIssues(
                         MarkdownlintIssuesFromFilePath(settings),
                         @"c:\repo");
             ]]>
             </code>
             </example>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintCliLogFileFormat(Cake.Core.ICakeContext)">
            <summary>
            Gets an instance for the log format as written by markdownlint-cli or Cake.Markdownlint.
            </summary>
            <param name="context">The context.</param>
            <returns>Instance for the Markdownlint log format.</returns>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintV1LogFileFormat(Cake.Core.ICakeContext)">
            <summary>
            Gets an instance for the log format as written by Markdownlint with <c>options.resultVersion</c> set to 1.
            </summary>
            <param name="context">The context.</param>
            <returns>Instance for the Markdownlint V1 log format.</returns>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintAddRuleUrlResolver(Cake.Core.ICakeContext,System.Func{Cake.Issues.Markdownlint.MarkdownlintRuleDescription,System.Uri})">
            <summary>
            Registers a new URL resolver with default priority of 0.
            </summary>
            <param name="context">The context.</param>
            <param name="resolver">Resolver which returns an <see cref="T:System.Uri"/> linking to a site
            containing help for a specific <see cref="T:Cake.Issues.Markdownlint.MarkdownlintRuleDescription"/>.</param>
            <example>
            <para>Adds a provider with default priority of 0 returning a link for all rules with Id smaller than 20 to
            search with Google for the rule:</para>
            <code>
            <![CDATA[
            MarkdownlintAddRuleUrlResolver(x =>
                x.RuleId < 20 ?
                new Uri("https://www.google.com/search?q=%22" + x.Rule + ":%22+") :
                null)
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases.MarkdownlintAddRuleUrlResolver(Cake.Core.ICakeContext,System.Func{Cake.Issues.Markdownlint.MarkdownlintRuleDescription,System.Uri},System.Int32)">
            <summary>
            Registers a new URL resolver with a specific priority.
            </summary>
            <param name="context">The context.</param>
            <param name="resolver">Resolver which returns an <see cref="T:System.Uri"/> linking to a site
            containing help for a specific <see cref="T:Cake.Issues.Markdownlint.MarkdownlintRuleDescription"/>.</param>
            <param name="priority">Priority of the resolver. Resolver with a higher priority are considered
            first during resolving of the URL.</param>
            <example>
            <para>Adds a provider of priority 5 returning a link for all rules with Id smaller than 20 to
            search with Google for the rule:</para>
            <code>
            <![CDATA[
            MarkdownlintAddRuleUrlResolver(x =>
                x.RuleId < 20 ?
                new Uri("https://www.google.com/search?q=%22" + x.Rule + ":%22+") :
                null,
                5)
            ]]>
            </code>
            </example>
        </member>
        <member name="T:Cake.Issues.Markdownlint.MarkdownlintIssuesProvider">
            <summary>
            Provider for issues reported by Markdownlint.
            </summary>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesProvider.#ctor(Cake.Core.Diagnostics.ICakeLog,Cake.Issues.Markdownlint.MarkdownlintIssuesSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Markdownlint.MarkdownlintIssuesProvider"/> class.
            </summary>
            <param name="log">The Cake log context.</param>
            <param name="settings">Settings for reading the log file.</param>
        </member>
        <member name="P:Cake.Issues.Markdownlint.MarkdownlintIssuesProvider.ProviderTypeName">
            <summary>
            Gets the name of the Markdownlint issue provider.
            This name can be used to identify issues based on the <see cref="P:Cake.Issues.IIssue.ProviderType"/> property.
            </summary>
        </member>
        <member name="P:Cake.Issues.Markdownlint.MarkdownlintIssuesProvider.ProviderName">
            <inheritdoc />
        </member>
        <member name="T:Cake.Issues.Markdownlint.MarkdownlintIssuesSettings">
            <summary>
            Settings for <see cref="T:Cake.Issues.Markdownlint.MarkdownlintIssuesAliases"/>.
            </summary>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesSettings.#ctor(Cake.Core.IO.FilePath,Cake.Issues.Markdownlint.BaseMarkdownlintLogFileFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Markdownlint.MarkdownlintIssuesSettings"/> class
            for reading a log file on disk.
            </summary>
            <param name="logFilePath">Path to the log file.
            The log file needs to be in the format as defined by the <paramref name="format"/> parameter.</param>
            <param name="format">Format of the provided log file.</param>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintIssuesSettings.#ctor(System.Byte[],Cake.Issues.Markdownlint.BaseMarkdownlintLogFileFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Markdownlint.MarkdownlintIssuesSettings"/> class
            for a log file content in memory.
            </summary>
            <param name="logFileContent">Content of the log file.
            The log file needs to be in the format as defined by the <paramref name="format"/> parameter.</param>
            <param name="format">Format of the provided log file.</param>
        </member>
        <member name="T:Cake.Issues.Markdownlint.MarkdownlintRuleDescription">
            <summary>
            Class describing rules appearing in Markdownlint logs.
            </summary>
        </member>
        <member name="P:Cake.Issues.Markdownlint.MarkdownlintRuleDescription.RuleId">
            <summary>
            Gets or sets the identifier of the rule.
            </summary>
        </member>
        <member name="T:Cake.Issues.Markdownlint.MarkdownlintRuleUrlResolver">
            <summary>
            Class for retrieving an URL linking to a site describing a rule.
            </summary>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintRuleUrlResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Markdownlint.MarkdownlintRuleUrlResolver"/> class.
            </summary>
        </member>
        <member name="P:Cake.Issues.Markdownlint.MarkdownlintRuleUrlResolver.Instance">
            <summary>
            Gets the instance of the rule resolver.
            </summary>
        </member>
        <member name="M:Cake.Issues.Markdownlint.MarkdownlintRuleUrlResolver.TryGetRuleDescription(System.String,Cake.Issues.Markdownlint.MarkdownlintRuleDescription)">
            <inheritdoc/>
        </member>
    </members>
</doc>
